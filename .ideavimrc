"" -- Map leader to z --
let mapleader="z"

" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Source your .vimrc
source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

set relativenumber
" Do incremental searching.
set incsearch
set ideajoin
set quickscope
set ideastatusicon=enabled "or use grey

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
map <leader>si <ESC>:source ~/.ideavimrc<CR>
map <leader>ei <ESC>:e ~/.ideavimrc<CR>

map <leader>sd <Action>(Debug)
map <leader>ss <Action>(Stop)
map <leader>gc <Action>(CheckinProject)
map <leader>gp <Action>(Vcs.UpdateProject)
map <leader>ro <Action>(Move)
map <leader>rr <Action>(RenameElement)
map <leader>ri <Action>(Inline)
map <leader>rp <Action>(IntroduceParameter)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rm <Action>(ExtractMethod)
map <leader>n <Action>(GotoNextError)
map <leader>uu <Action>(RiderUnitTestRepeatPreviousRunAction)
map <leader>ra <Action>(RiderUnitTestRunSolutionAction)
map <leader>lb <Action>(ToggleLineBreakpoint)
map <leader>jp <Action>(ActivateJsonParserToolWindow)
map ,m <Action>(FileStructurePopup)
map ,g <Action>(Generate)
map gu <Action>(GotoDeclaration)
map gdd <Action>(ReSharperGotoImplementation)
map <Space> <Action>(AceWordStartAction)
map <M-k> <Action>(MethodUp)
map <M-j> <Action>(MethodDown)
map <C-M-k> <Action>(MoveLineUp)
map <C-M-j> <Action>(MoveLineDown)
map <leader>vv <Action>(VimPluginToggle)
map <leader>vt <Action>(VimFindActionIdAction)
map <leader>fs <Action>(ToggleFullScreen)
map <leader>tc <Action>(ExpandCollapseToggleAction)
map <leader>ss <Action>(SurroundWith)
map <leader>aa <Action>(AIAssistant.Editor.GenerateCodeInplace)
map <C-Enter> <Action>(IntentionActionAsAction_com.intellij.ml.llm.intentions.chat.AIAssistantIntention)
map <M-q> <Action>(CloseAllEditorsButActive)
map <C-t> <Action>(SearchEverywhere)
map <M-1> <Action>(ActivateProjectToolWindow)
map <M-2> <Action>(ActivateUnitTestsToolWindow)
map <M-3> <Action>(ActivateAIAssistantToolWindow)
map <M-5> <Action>(ActivateVersionControlToolWindow)

map <leader>; A;<ESC>
imap <leader>; <ESC>A;<ESC>
map <leader>cc ci"
map <leader>b ciw
map <leader>c' ci'

map qq :q<CR>
map hh ^
imap hh <ESC>^
map ll $
imap ll <ESC>$
imap jk <ESC>

if has('ide')
  " mappings and options that exist only in IdeaVim
  map <leader>f <Action>(GotoFile)
  map <leader>g <Action>(FindInPath)
  map <leader>b <Action>(Switcher)

  if &ide =~? 'intellij idea'
    if &ide =~? 'community'
      " some mappings and options for IntelliJ IDEA Community Edition
    elseif &ide =~? 'ultimate'
      " some mappings and options for IntelliJ IDEA Ultimate Edition
    endif
  elseif &ide =~? 'pycharm'
    " PyCharm specific mappings and options
  elseif &ide =~? 'rider'
    " Rider specific mappings and options
    map <M-4> <Action>(ActivateNuGetToolWindow)
  endif
endif
